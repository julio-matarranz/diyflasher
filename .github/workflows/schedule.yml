name: Push commit
on:
  schedule:
    - cron: "0 */2 * * *"
permissions:
  contents: write
jobs:
  report:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create report file
        run: rm -rf ${{ github.workspace }}/github-assets && mkdir ${{ github.workspace }}/github-assets
      - name: Download assets
        run: | 
          curl -s https://api.github.com/repos/BitMaker-hub/NerdMiner_v2/tags --create-dirs --output ${{ github.workspace }}/github-assets/tags.json
          jq -rc '.[:3][] | select (.name | contains("nerdminer-prerelease") or contains("nerdminer-release")) | .name' ${{ github.workspace }}/github-assets/tags.json |  while read -r tag; do rm -f ${{ github.workspace }}/github-assets/$(printf $tag | jq -sRr 'gsub("[\\n\\t\\r]"; "")')/assets && curl -s https://api.github.com/repos/BitMaker-hub/NerdMiner_v2/releases/tags/$(printf $tag | jq -sRr 'gsub("[\\n\\t\\r]"; "") | @uri') | jq -r 'try .assets[] | [.name, .browser_download_url] | @csv' |  while IFS="," read -r name url; do curl -L --create-dirs --output ${{ github.workspace }}/github-assets/$(printf $tag | jq -sRr 'gsub("[\\n\\t\\r\"]"; "")')/$(printf $name | jq -sRr 'gsub("[\\n\\t\\r\"]"; "")') $(printf $url | jq -sRr 'gsub("[\\n\\t\\r\"]"; "")') && echo $(printf $name | jq -sRr 'gsub("[\\n\\t\\r\"]"; "")') >> ${{ github.workspace }}/github-assets/$(printf $tag | jq -sRr 'gsub("[\\n\\t\\r]"; "")')/assets  ; done ; done
      - name: Automated firmware
        run: |
          git config --global user.name 'GH CI'
          git config --global user.email 'gh-ci@users.noreply.github.com'
          git commit --allow-empty -am "ci: Automated firmware sync"
          git push